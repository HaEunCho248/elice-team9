{"ast":null,"code":"var _jsxFileName = \"/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/certificate/Certificates.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport Certificate from \"./Certificate\";\nimport CertificateAddForm from \"./CertificateAddForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Certificates(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  //useState로 Certificates 상태를 생성함.\n  const [certificates, setCertificates] = useState([]); //useState로 isAdding 상태를 생성함.\n\n  const [isAdding, setIsAdding] = useState(false);\n  useEffect(() => {\n    // \"Certificatelist/유저id\"로 GET 요청하고, response의 data로 Certificates를 세팅함.\n    Api.get(\"certificatelist\", portfolioOwnerId).then(res => setCertificates(res.data));\n  }, [portfolioOwnerId]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"\\uC790\\uACA9\\uC99D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), certificates.map(certificate => /*#__PURE__*/_jsxDEV(Certificate, {\n        certificate: certificate,\n        setCertificates: setCertificates,\n        isEditable: isEditable\n      }, certificate.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)), isEditable && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3 text-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: {\n            span: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsAdding(true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), isAdding && /*#__PURE__*/_jsxDEV(CertificateAddForm, {\n        portfolioOwnerId: portfolioOwnerId,\n        setCertificates: setCertificates,\n        setIsAdding: setIsAdding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Certificates, \"j3tDQ/IAchGgIQ8R2Ks1Iui2z/Q=\");\n\n_c = Certificates;\nexport default Certificates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Certificates\");","map":{"version":3,"sources":["/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/certificate/Certificates.js"],"names":["React","useEffect","useState","Card","Button","Row","Col","Api","Certificate","CertificateAddForm","Certificates","portfolioOwnerId","isEditable","certificates","setCertificates","isAdding","setIsAdding","get","then","res","data","map","certificate","id","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAGA,SAASC,YAAT,OAAwD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAkC;AACtD;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD,CAFsD,CAGtD;;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,GAAG,CAACU,GAAJ,CAAQ,iBAAR,EAA2BN,gBAA3B,EAA6CO,IAA7C,CAAmDC,GAAD,IAASL,eAAe,CAACK,GAAG,CAACC,IAAL,CAA1E;AACD,GAHQ,EAGN,CAACT,gBAAD,CAHM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,YAAY,CAACQ,GAAb,CAAkBC,WAAD,iBAChB,QAAC,WAAD;AAEE,QAAA,WAAW,EAAEA,WAFf;AAGE,QAAA,eAAe,EAAER,eAHnB;AAIE,QAAA,UAAU,EAAEF;AAJd,SACOU,WAAW,CAACC,EADnB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAUGX,UAAU,iBACT,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEY,YAAAA,IAAI,EAAE;AAAR,WAAT;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ,EAiBGD,QAAQ,iBACP,QAAC,kBAAD;AACE,QAAA,gBAAgB,EAAEJ,gBADpB;AAEE,QAAA,eAAe,EAAEG,eAFnB;AAGE,QAAA,WAAW,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAzCQN,Y;;KAAAA,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport Certificate from \"./Certificate\";\nimport CertificateAddForm from \"./CertificateAddForm\";\n\n\nfunction Certificates({ portfolioOwnerId, isEditable }) {\n  //useState로 Certificates 상태를 생성함.\n  const [certificates, setCertificates] = useState([]);\n  //useState로 isAdding 상태를 생성함.\n  const [isAdding, setIsAdding] = useState(false);\n  \n\n  useEffect(() => {\n    // \"Certificatelist/유저id\"로 GET 요청하고, response의 data로 Certificates를 세팅함.\n    Api.get(\"certificatelist\", portfolioOwnerId).then((res) => setCertificates(res.data));\n  }, [portfolioOwnerId]);\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>자격증</Card.Title>\n        {certificates.map((certificate) => (\n          <Certificate\n            key={certificate.id}\n            certificate={certificate}\n            setCertificates={setCertificates}\n            isEditable={isEditable}\n          />\n        ))}\n        {isEditable && (\n          <Row className=\"mt-3 text-center mb-4\">\n            <Col sm={{ span: 20 }}>\n              <Button onClick={() => setIsAdding(true)}>+</Button>\n            </Col>\n          </Row>\n        )}\n        {isAdding && (\n          <CertificateAddForm\n            portfolioOwnerId={portfolioOwnerId}\n            setCertificates={setCertificates}\n            setIsAdding={setIsAdding}\n          />\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Certificates;\n"]},"metadata":{},"sourceType":"module"}