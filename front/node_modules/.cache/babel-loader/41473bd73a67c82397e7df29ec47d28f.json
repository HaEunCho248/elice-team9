{"ast":null,"code":"var _jsxFileName = \"/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/education/Educations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport Education from \"./Education\";\nimport EducationAddForm from \"./EducationAddForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Educations(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const test0825 = [{\n    school: \"엘리스\",\n    major: \"AI5기\",\n    position: \"재학중\"\n  }]; //useState로 awards 상태를 생성함.\n\n  const [educations, setEducations] = useState(test0825); //useState로 isAdding 상태를 생성함.\n\n  const [isAdding, setIsAdding] = useState(false);\n  useEffect(() => {\n    // \"awardlist/유저id\"로 GET 요청하고, response의 data로 awards를 세팅함.\n    Api.get(\"educationlist\", portfolioOwnerId).then(res => setEducations(res.data));\n  }, [portfolioOwnerId]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"\\uD559\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), educations.map(education => /*#__PURE__*/_jsxDEV(Education, {\n        education: education,\n        setEducations: setEducations,\n        isEditable: isEditable\n      }, education.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), isEditable && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3 text-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: {\n            span: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setIsAdding(true),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), isAdding && /*#__PURE__*/_jsxDEV(EducationAddForm, {\n        portfoiloOwnerId: portfolioOwnerId,\n        setEducations: setEducations,\n        setIsAdding: setIsAdding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Educations, \"d5i/6/CvIP7TSxGxCN6b9jrELz0=\");\n\n_c = Educations;\nexport default Educations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Educations\");","map":{"version":3,"sources":["/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/education/Educations.js"],"names":["React","useEffect","useState","Card","Button","Row","Col","Api","Education","EducationAddForm","Educations","portfolioOwnerId","isEditable","test0825","school","major","position","educations","setEducations","isAdding","setIsAdding","get","then","res","data","map","education","id","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,SAASC,UAAT,OAAsD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAkC;AACpD,QAAMC,QAAQ,GAAG,CAAC;AACEC,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GAAD,CAAjB,CADoD,CAMpD;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACW,QAAD,CAA5C,CAPoD,CAQpD;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,GAAG,CAACc,GAAJ,CAAQ,eAAR,EAAyBV,gBAAzB,EAA2CW,IAA3C,CAAiDC,GAAD,IAASL,aAAa,CAACK,GAAG,CAACC,IAAL,CAAtE;AACD,GAHQ,EAGN,CAACb,gBAAD,CAHM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGM,UAAU,CAACQ,GAAX,CAAgBC,SAAD,iBACd,QAAC,SAAD;AAEE,QAAA,SAAS,EAAEA,SAFb;AAGE,QAAA,aAAa,EAAER,aAHjB;AAIE,QAAA,UAAU,EAAEN;AAJd,SACOc,SAAS,CAACC,EADjB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,EAUGf,UAAU,iBACT,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEgB,YAAAA,IAAI,EAAE;AAAR,WAAT;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ,EAiBGD,QAAQ,iBACP,QAAC,gBAAD;AACE,QAAA,gBAAgB,EAAER,gBADpB;AAEE,QAAA,aAAa,EAAEO,aAFjB;AAGE,QAAA,WAAW,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA9CQV,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport Education from \"./Education\";\nimport EducationAddForm from \"./EducationAddForm\";\n\n\nfunction Educations({ portfolioOwnerId, isEditable }) {\n  const test0825 = [{\n                      school: \"엘리스\",\n                      major: \"AI5기\",\n                      position: \"재학중\"\n                    }]\n  //useState로 awards 상태를 생성함.\n  const [educations, setEducations] = useState(test0825);\n  //useState로 isAdding 상태를 생성함.\n  const [isAdding, setIsAdding] = useState(false);\n\n  useEffect(() => {\n    // \"awardlist/유저id\"로 GET 요청하고, response의 data로 awards를 세팅함.\n    Api.get(\"educationlist\", portfolioOwnerId).then((res) => setEducations(res.data));\n  }, [portfolioOwnerId]);\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>학력</Card.Title>\n        {educations.map((education) => (\n          <Education\n            key={education.id}\n            education={education}\n            setEducations={setEducations}\n            isEditable={isEditable}\n          />\n        ))}\n        {isEditable && (\n          <Row className=\"mt-3 text-center mb-4\">\n            <Col sm={{ span: 20 }}>\n              <Button onClick={() => setIsAdding(true)}>+</Button>\n            </Col>\n          </Row>\n        )}\n        {isAdding && (\n          <EducationAddForm\n            portfoiloOwnerId={portfolioOwnerId}\n            setEducations={setEducations}\n            setIsAdding={setIsAdding}\n          />\n        )}\n    \n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Educations;"]},"metadata":{},"sourceType":"module"}