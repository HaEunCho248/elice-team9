{"ast":null,"code":"var _jsxFileName = \"/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/certificate/CertificateCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport * as Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CertificateCard(_ref) {\n  _s();\n\n  let {\n    certificate,\n    isEditable,\n    setIsEditing\n  } = _ref;\n  // const [description, setDescription] = useState(currentCertificate.description);\n  const [title, setTitle] = useState(\"\");\n\n  const handleDelete = async (e, _id) => {\n    e.preventDefault();\n    e.stopPropagation(); // currentCertificate의 user_id를 user_id 변수에 할당함.\n    // const user_id = currentCertificate.user_id;\n    // \"Certificates/수상 id\" 엔드포인트로 PUT 요청함.\n\n    Api.post(`certificate/delete/${certificate.id}`, {\n      title\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card.Text, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: certificate.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: certificate.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), isEditable && /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          size: \"sm\",\n          onClick: () => setIsEditing(prev => !prev),\n          className: \"mr-3\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-info\",\n          size: \"sm\",\n          value: certificate._id,\n          onClick: e => handleDelete(e, setTitle(certificate.id)),\n          className: \"mr-3\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CertificateCard, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n\n_c = CertificateCard;\nexport default CertificateCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CertificateCard\");","map":{"version":3,"sources":["/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/certificate/CertificateCard.js"],"names":["React","useState","Card","Button","Row","Col","DatePicker","Api","CertificateCard","certificate","isEditable","setIsEditing","title","setTitle","handleDelete","e","_id","preventDefault","stopPropagation","post","id","description","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;;AAEA,SAASC,eAAT,OAAoE;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,GAA2C;AAElE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,YAAY,GAAG,OAAOC,CAAP,EAAUC,GAAV,KAAkB;AACrCD,IAAAA,CAAC,CAACE,cAAF;AACAF,IAAAA,CAAC,CAACG,eAAF,GAFqC,CAIrC;AACA;AAEA;;AACEX,IAAAA,GAAG,CAACY,IAAJ,CAAU,sBAAqBV,WAAW,CAACW,EAAG,EAA9C,EAAiD;AAC/CR,MAAAA;AAD+C,KAAjD;AAGD,GAXH;;AAcA,sBACA,QAAC,IAAD,CAAM,IAAN;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE;AAAA,oBAAOH,WAAW,CAACG;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8BH,WAAW,CAACY;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAMGX,UAAU,iBACT,QAAC,GAAD;AAAK,QAAA,EAAE,MAAP;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,cADV;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAEW,IAAD,IAAU,CAACA,IAAZ,CAH7B;AAIE,UAAA,SAAS,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,cADV;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,KAAK,EAAEb,WAAW,CAACO,GAHrB;AAIE,UAAA,OAAO,EAAGD,CAAD,IAAMD,YAAY,CAACC,CAAD,EAAIF,QAAQ,CAACJ,WAAW,CAACW,EAAb,CAAZ,CAJ7B;AAKE,UAAA,SAAS,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAgCD;;GAnDQZ,e;;KAAAA,e;AAqDT,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Button, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport * as Api from \"../../api\";\n\nfunction CertificateCard({ certificate, isEditable, setIsEditing }) {\n \n  // const [description, setDescription] = useState(currentCertificate.description);\n  const [title, setTitle] = useState(\"\");\n  \n  const handleDelete = async (e, _id) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // currentCertificate의 user_id를 user_id 변수에 할당함.\n    // const user_id = currentCertificate.user_id;\n\n    // \"Certificates/수상 id\" 엔드포인트로 PUT 요청함.\n      Api.post(`certificate/delete/${certificate.id}`, {\n        title\n      });\n    };\n\n\n  return (\n  <Card.Text>\n    <Row className=\"align-items-center\">\n      <Col>\n        <span>{certificate.title}</span>\n        <br />\n        <span className=\"text-muted\">{certificate.description}</span>\n      </Col>\n      {isEditable && (\n        <Col xs lg=\"1\">\n          <Button\n            variant=\"outline-info\"\n            size=\"sm\"\n            onClick={() => setIsEditing((prev) => !prev)}\n            className=\"mr-3\"\n          >\n            Edit\n          </Button>\n          <Button\n            variant=\"outline-info\"\n            size=\"sm\"\n            value={certificate._id}\n            onClick={(e)=> handleDelete(e, setTitle(certificate.id))}\n            className=\"mr-3\"\n          >\n            삭제\n          </Button>\n        </Col>\n        )}\n      </Row>\n     </Card.Text>\n  );\n}\n\nexport default CertificateCard;\n"]},"metadata":{},"sourceType":"module"}