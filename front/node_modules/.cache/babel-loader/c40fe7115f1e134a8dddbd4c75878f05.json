{"ast":null,"code":"var _jsxFileName = \"/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/project/ProjectEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectEditForm(_ref) {\n  _s();\n\n  let {\n    currentProject,\n    setProjects,\n    setIsEditing\n  } = _ref;\n  //useState로 title 상태를 생성함.\n  const [title, setTitle] = useState(currentProject.title); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(currentProject.description);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    e.stopPropagation(); // currentProject의 user_id를 user_id 변수에 할당함.\n\n    const user_id = currentProject.user_id; // \"projects/수상 id\" 엔드포인트로 PUT 요청함.\n\n    await Api.put(`projects/${currentProject.id}`, {\n      user_id,\n      title,\n      description,\n      startDate,\n      endDate\n    }); // \"projectlist/유저id\" 엔드포인트로 GET 요청함.\n\n    const res = await Api.get(\"projectlist\", user_id); // projects를 response의 data로 세팅함.\n\n    setProjects(res.data); // 편집 과정이 끝났으므로, isEditing을 false로 세팅함.\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicTitle\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uB0B4\\uC5ED\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDescription\",\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC0C1\\uC138\\uB0B4\\uC5ED\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [\"\\uC2DC\\uC791\\uC77C \", /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [\"\\uC885\\uB8CC\\uC77C \", /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      className: \"mt-3 text-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"me-3\",\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setIsEditing(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectEditForm, \"vALTOfkpdDWRay/ASmpwqPkLd6w=\");\n\n_c = ProjectEditForm;\nexport default ProjectEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectEditForm\");","map":{"version":3,"sources":["/Users/jbk/Documents/Elice/Project1/codes/0826_Proj1_local/front/src/components/project/ProjectEditForm.js"],"names":["React","useState","Button","Form","Col","Row","Api","DatePicker","ProjectEditForm","currentProject","setProjects","setIsEditing","title","setTitle","description","setDescription","startDate","setStartDate","Date","endDate","setEndDate","handleSubmit","e","preventDefault","stopPropagation","user_id","put","id","res","get","data","target","value","date","span"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport DatePicker from \"react-datepicker\";\n\nfunction ProjectEditForm({ currentProject, setProjects, setIsEditing }) {\n  //useState로 title 상태를 생성함.\n  const [title, setTitle] = useState(currentProject.title);\n  //useState로 description 상태를 생성함.\n  const [description, setDescription] = useState(currentProject.description);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // currentProject의 user_id를 user_id 변수에 할당함.\n    const user_id = currentProject.user_id;\n\n    // \"projects/수상 id\" 엔드포인트로 PUT 요청함.\n    await Api.put(`projects/${currentProject.id}`, {\n      user_id,\n      title,\n      description,\n      startDate, \n      endDate,\n    });\n\n    // \"projectlist/유저id\" 엔드포인트로 GET 요청함.\n    const res = await Api.get(\"projectlist\", user_id);\n    // projects를 response의 data로 세팅함.\n    setProjects(res.data);\n    // 편집 과정이 끝났으므로, isEditing을 false로 세팅함.\n    setIsEditing(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicTitle\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"프로젝트 내역\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicDescription\" className=\"mt-3\">\n        <Form.Control\n          type=\"text\"\n          placeholder=\"프로젝트 상세내역\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mt-3\">\n        \n        <Col>\n          시작일 <DatePicker \n          selected={startDate}\n          onChange={(date) => setStartDate(date)}\n          />\n        </Col>\n        <Col>\n          종료일 <DatePicker \n          selected={endDate}\n          onChange={(date) => setEndDate(date)}\n          />\n        </Col>\n        \n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mt-3 text-center mb-4\">\n        <Col sm={{ span: 20 }}>\n          <Button variant=\"primary\" type=\"submit\" className=\"me-3\">\n            확인\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setIsEditing(false)}>\n            취소\n          </Button>\n        </Col>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default ProjectEditForm;\n"]},"metadata":{},"sourceType":"module"}